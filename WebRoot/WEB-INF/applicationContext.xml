<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<!-- <property name="jdbcUrl"> <value>jdbc:mysql://127.0.0.1:3306/apptg?characterEncoding=utf8 
		</value> </property> <property name="user"> <value>root</value> </property> 
		<property name="password"> <value>7878168</value> </property> <bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource"> <property name="driverClassName" 
		value="com.mysql.jdbc.Driver"> </property> <property name="url" value="jdbc:mysql://127.0.0.1/apptg?characterEncoding=utf8&amp;autoReconnect=true"> 
		</property> <property name="username" value="root"></property> <property 
		name="password" value="7878168"></property> </bean> <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> <property name="driverClass" value="com.mysql.jdbc.Driver" />   
		        <property name="jdbcUrl" value="jdbc:mysql://192.168.1.5:3306/test" />   
		        <property name="user" value="yunix" />           <property name="password" value="123456" />   
		        <property name="initialPoolSize" value="1" />           <property name="minPoolSize" value="0" />   
		        <property name="maxPoolSize" value="10" />           <property name="acquireIncrement" value="5" />   
		        <property name="maxIdleTime" value="10" />           <property name="maxStatements" value="0" />   
		    </bean>   -->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl"
			value="jdbc:mysql://127.0.0.1:3306/apptg?characterEncoding=utf8"></property>
		<property name="user" value="root"></property>
		<property name="password" value="7878168"></property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize">
			<value>5</value>
		</property>

		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>30</value>
		</property>

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>10</value>
		</property>

		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>60</value>
		</property>

		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>5</value>
		</property>

		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements">
			<value>0</value>
		</property>

		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod">
			<value>60</value>
		</property>

		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>

		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure">
			<value>false</value>
		</property>

		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/hck/apptg/bean/User.hbm.xml</value>
				<value>com/hck/apptg/bean/Ziyuan.hbm.xml</value>
				<value>com/hck/apptg/bean/Huitie.hbm.xml</value>
				<value>com/hck/apptg/bean/Qudao.hbm.xml</value>
				<value>com/hck/apptg/bean/Admin.hbm.xml</value>
				<value>com/hck/apptg/bean/Fensi.hbm.xml</value>
				<value>com/hck/apptg/bean/Fankui.hbm.xml</value>
				<value>com/hck/apptg/bean/Version.hbm.xml</value>
				<value>com/hck/apptg/bean/Jinbi.hbm.xml</value>
				<value>com/hck/apptg/bean/Message.hbm.xml</value>
				<value>com/hck/apptg/bean/Tongzhi.hbm.xml</value>
				<value>com/hck/apptg/bean/Jubao.hbm.xml</value>

			</list>
		</property>
	</bean>

	<!-- 用户dao -->
	<bean id="userDao" class="com.hck.apptg.daoserver.UserDaoServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="versionDao" class="com.hck.apptg.daoserver.VersionServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 资源dao -->
	<bean id="ziyuanDao" class="com.hck.apptg.daoserver.ZiYuanDaoServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 渠道dao -->
	<bean id="qudaoDao" class="com.hck.apptg.daoserver.QuDaoServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 回帖dao -->
	<bean id="huitieDao" class="com.hck.apptg.daoserver.HUiTieServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 帖子dao -->
	<bean id="tieziDao" class="com.hck.apptg.daoserver.TieZiServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 粉丝dao -->
	<bean id="fensiDao" class="com.hck.apptg.daoserver.FenSiServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 反馈dao -->
	<bean id="fankuiDao" class="com.hck.apptg.daoserver.FanKuiServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 版本dao -->
	<bean id="banbenDao" class="com.hck.apptg.daoserver.BanBenServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 金币dao -->
	<bean id="jinbiDao" class="com.hck.apptg.daoserver.JinBiServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 消息dao -->
	<bean id="msgDao" class="com.hck.apptg.daoserver.MessageServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 通知dao -->
	<bean id="TZDao" class="com.hck.apptg.daoserver.TongZhiServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!-- 举报dao -->
	<bean id="jbDao" class="com.hck.apptg.daoserver.JuBaoServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>







	<!-- 后台用dao -->
	<!-- 管理员dao -->
	<bean id="adminDao" class="com.hck.apptg.daoserver.AdminServer"
		scope="prototype">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="AdminAction" class="com.hck.apptg.pc.action.AdminAction"
		scope="prototype">
		<property name="mAdminServer">
			<ref bean="adminDao" />
		</property>
	</bean>

	<!-- pc用户action -->
	<bean id="UserAction" class="com.hck.apptg.pc.action.UserAction"
		scope="prototype">
		<property name="uServer">
			<ref bean="userDao" />
		</property>
	</bean>
	<!-- pc资源action -->
	<bean id="ZiYuanAction" class="com.hck.apptg.pc.action.ZiYuanAction"
		scope="prototype">
		<property name="ziYuanDaoServer">
			<ref bean="ziyuanDao" />
		</property>
	</bean>
	<!-- pc渠道action -->
	<bean id="QuDaoAction" class="com.hck.apptg.pc.action.QuDaoAction"
		scope="prototype">
		<property name="quDaoServer">
			<ref bean="qudaoDao" />
		</property>
	</bean>
	<!-- pc回帖action -->
	<bean id="HuiTieAction" class="com.hck.apptg.pc.action.HuiTieAction"
		scope="prototype">
		<property name="mHUiTieServer">
			<ref bean="huitieDao" />
		</property>
	</bean>
	<!-- pc反馈action -->
	<bean id="FanKuiAction" class="com.hck.apptg.pc.action.FanKuiAction"
		scope="prototype">
		<property name="mKuiServer">
			<ref bean="fankuiDao" />
		</property>
	</bean>

	<!-- pc举报action -->
	<bean id="JuBaoAction" class="com.hck.apptg.pc.action.JuBaoAction"
		scope="prototype">
		<property name="mJuBaoServer">
			<ref bean="jbDao" />
		</property>
	</bean>

	<!-- pc消息action -->
	<bean id="MessageAction" class="com.hck.apptg.pc.action.MessageAction"
		scope="prototype">
		<property name="messageServer">
			<ref bean="msgDao" />
		</property>
	</bean>

	<!-- pc通知action -->
	<bean id="TongZhiAction" class="com.hck.apptg.pc.action.TongZhiAction"
		scope="prototype">
		<property name="zTongZhiServer">
			<ref bean="TZDao" />
		</property>
	</bean>








	<!-- 手机用action -->
	<!-- 用户action -->
	<bean id="UserActionP" class="com.hck.apptg.phone.action.UserAction"
		scope="prototype">
		<property name="uDao">
			<ref bean="userDao" />
		</property>
	</bean>

	<!-- 资源action -->
	<bean id="ZiYuanActionP" class="com.hck.apptg.phone.action.ZiYuanAction"
		scope="prototype">
		<property name="mZiYuanDaoServer">
			<ref bean="ziyuanDao" />
		</property>
		<property name="jinBiServer">
			<ref bean="jinbiDao" />
		</property>
	</bean>
	<!-- 回帖action -->
	<bean id="HuiTieActionP" class="com.hck.apptg.phone.action.HuiTieAction"
		scope="prototype">
		<property name="hServer">
			<ref bean="huitieDao" />
		</property>
		<property name="jinBiServer">
			<ref bean="jinbiDao" />
		</property>
		<property name="ziYuanDaoServer">
			<ref bean="ziyuanDao" />
		</property>
	</bean>
	<!-- 渠道action -->
	<bean id="QuDaoActionP" class="com.hck.apptg.phone.action.QuDaoAction"
		scope="prototype">
		<property name="mDaoServer">
			<ref bean="qudaoDao" />
		</property>
		<property name="jinBiServer">
			<ref bean="jinbiDao" />
		</property>
	</bean>
	<!-- 帖子action -->
	<bean id="TieziActionP" class="com.hck.apptg.phone.action.TieZiAction"
		scope="prototype">
		<property name="tieZiServer">
			<ref bean="tieziDao" />
		</property>
	</bean>
	<!-- 粉丝action -->
	<bean id="FSActionP" class="com.hck.apptg.phone.action.FenSiAction"
		scope="prototype">
		<property name="fServer">
			<ref bean="fensiDao" />
		</property>
		<property name="mTongZhiServer">
			<ref bean="TZDao" />
		</property>
		<property name="uServer">
			<ref bean="userDao" />
		</property>
	</bean>
	<!-- 反馈action -->
	<bean id="FanKuiActionP" class="com.hck.apptg.phone.action.FanKuiAction"
		scope="prototype">
		<property name="mServer">
			<ref bean="fankuiDao" />
		</property>
		<property name="jinBiServer">
			<ref bean="jinbiDao" />
		</property>
	</bean>
	<!-- 版本action -->
	<bean id="BanBenActionP" class="com.hck.apptg.phone.action.BanBenAction"
		scope="prototype">
		<property name="banBenServer">
			<ref bean="banbenDao" />
		</property>
	</bean>
	<!-- 系统消息action -->
	<bean id="MsgActionP" class="com.hck.apptg.phone.action.MessageAction"
		scope="prototype">
		<property name="messageServer">
			<ref bean="msgDao" />
		</property>
	</bean>
	<!-- 通知消息action -->
	<bean id="TzActionP" class="com.hck.apptg.phone.action.TongZhiAction"
		scope="prototype">
		<property name="tongZhiServer">
			<ref bean="TZDao" />
		</property>
	</bean>

	<!-- 兑吧处理兑换action -->
	<bean id="OrderActionP" class="com.hck.apptg.phone.action.OrderAction"
		scope="prototype">
		<property name="mDaoServer">
			<ref bean="userDao" />
		</property>
	</bean>

	<!-- 兑吧处理兑换action -->
	<bean id="JuBaoActionP" class="com.hck.apptg.phone.action.JuBaoAction"
		scope="prototype">
		<property name="jServer">
			<ref bean="jbDao" />
		</property>
	</bean>
	<bean id="VersionP" class="com.hck.apptg.phone.action.VersionAction"
		scope="prototype">
		<property name="server">
			<ref bean="versionDao" />
		</property>
	</bean>
</beans>